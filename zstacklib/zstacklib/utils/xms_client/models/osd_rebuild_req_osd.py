# coding: utf-8

"""
    XMS API

    XMS is the controller of distributed storage system  # noqa: E501

    OpenAPI spec version: SDS_4.2.300.2
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401
import six


class OsdRebuildReqOsd(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'new_disk_id': 'int',
        'new_omap_byte': 'int',
        'new_partition_id': 'int',
        'new_read_cache_size': 'int'
    }

    attribute_map = {
        'new_disk_id': 'new_disk_id',
        'new_omap_byte': 'new_omap_byte',
        'new_partition_id': 'new_partition_id',
        'new_read_cache_size': 'new_read_cache_size'
    }

    def __init__(self, new_disk_id=None, new_omap_byte=None, new_partition_id=None, new_read_cache_size=None):  # noqa: E501
        """OsdRebuildReqOsd - a model defined in Swagger"""  # noqa: E501

        self._new_disk_id = None
        self._new_omap_byte = None
        self._new_partition_id = None
        self._new_read_cache_size = None
        self.discriminator = None

        if new_disk_id is not None:
            self.new_disk_id = new_disk_id
        if new_omap_byte is not None:
            self.new_omap_byte = new_omap_byte
        if new_partition_id is not None:
            self.new_partition_id = new_partition_id
        if new_read_cache_size is not None:
            self.new_read_cache_size = new_read_cache_size

    @property
    def new_disk_id(self):
        """Gets the new_disk_id of this OsdRebuildReqOsd.  # noqa: E501

        new data disk id  # noqa: E501

        :return: The new_disk_id of this OsdRebuildReqOsd.  # noqa: E501
        :rtype: int
        """
        return self._new_disk_id

    @new_disk_id.setter
    def new_disk_id(self, new_disk_id):
        """Sets the new_disk_id of this OsdRebuildReqOsd.

        new data disk id  # noqa: E501

        :param new_disk_id: The new_disk_id of this OsdRebuildReqOsd.  # noqa: E501
        :type: int
        """

        self._new_disk_id = new_disk_id

    @property
    def new_omap_byte(self):
        """Gets the new_omap_byte of this OsdRebuildReqOsd.  # noqa: E501

        new size of omap partition  # noqa: E501

        :return: The new_omap_byte of this OsdRebuildReqOsd.  # noqa: E501
        :rtype: int
        """
        return self._new_omap_byte

    @new_omap_byte.setter
    def new_omap_byte(self, new_omap_byte):
        """Sets the new_omap_byte of this OsdRebuildReqOsd.

        new size of omap partition  # noqa: E501

        :param new_omap_byte: The new_omap_byte of this OsdRebuildReqOsd.  # noqa: E501
        :type: int
        """

        self._new_omap_byte = new_omap_byte

    @property
    def new_partition_id(self):
        """Gets the new_partition_id of this OsdRebuildReqOsd.  # noqa: E501

        new cache partition id  # noqa: E501

        :return: The new_partition_id of this OsdRebuildReqOsd.  # noqa: E501
        :rtype: int
        """
        return self._new_partition_id

    @new_partition_id.setter
    def new_partition_id(self, new_partition_id):
        """Sets the new_partition_id of this OsdRebuildReqOsd.

        new cache partition id  # noqa: E501

        :param new_partition_id: The new_partition_id of this OsdRebuildReqOsd.  # noqa: E501
        :type: int
        """

        self._new_partition_id = new_partition_id

    @property
    def new_read_cache_size(self):
        """Gets the new_read_cache_size of this OsdRebuildReqOsd.  # noqa: E501

        new read cache size in bytes  # noqa: E501

        :return: The new_read_cache_size of this OsdRebuildReqOsd.  # noqa: E501
        :rtype: int
        """
        return self._new_read_cache_size

    @new_read_cache_size.setter
    def new_read_cache_size(self, new_read_cache_size):
        """Sets the new_read_cache_size of this OsdRebuildReqOsd.

        new read cache size in bytes  # noqa: E501

        :param new_read_cache_size: The new_read_cache_size of this OsdRebuildReqOsd.  # noqa: E501
        :type: int
        """

        self._new_read_cache_size = new_read_cache_size

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, OsdRebuildReqOsd):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
