# coding: utf-8

"""
    XMS API

    XMS is the controller of distributed storage system  # noqa: E501

    OpenAPI spec version: SDS_4.2.300.2
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401
import six

# from zstacklib.utils.xms_client.models.object_storage_key import ObjectStorageKey  # noqa: F401,E501
# from zstacklib.utils.xms_client.models.os_user_properties_req import OSUserPropertiesReq  # noqa: F401,E501


class ObjectStorageUserCreateReqInfo(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'bucket_quota_max_objects': 'int',
        'bucket_quota_max_size': 'int',
        'display_name': 'str',
        'email': 'str',
        'external_bucket_quota_max_objects': 'int',
        'external_bucket_quota_max_size': 'int',
        'external_user_quota_max_objects': 'int',
        'external_user_quota_max_size': 'int',
        'keys': 'list[ObjectStorageKey]',
        'local_bucket_quota_max_objects': 'int',
        'local_bucket_quota_max_size': 'int',
        'local_user_quota_max_objects': 'int',
        'local_user_quota_max_size': 'int',
        'location_constraint_enabled': 'bool',
        'max_buckets': 'int',
        'name': 'str',
        'op_mask': 'str',
        'policy_id': 'int',
        'policy_polling_enabled': 'bool',
        'properties': 'OSUserPropertiesReq',
        'user_quota_max_objects': 'int',
        'user_quota_max_size': 'int'
    }

    attribute_map = {
        'bucket_quota_max_objects': 'bucket_quota_max_objects',
        'bucket_quota_max_size': 'bucket_quota_max_size',
        'display_name': 'display_name',
        'email': 'email',
        'external_bucket_quota_max_objects': 'external_bucket_quota_max_objects',
        'external_bucket_quota_max_size': 'external_bucket_quota_max_size',
        'external_user_quota_max_objects': 'external_user_quota_max_objects',
        'external_user_quota_max_size': 'external_user_quota_max_size',
        'keys': 'keys',
        'local_bucket_quota_max_objects': 'local_bucket_quota_max_objects',
        'local_bucket_quota_max_size': 'local_bucket_quota_max_size',
        'local_user_quota_max_objects': 'local_user_quota_max_objects',
        'local_user_quota_max_size': 'local_user_quota_max_size',
        'location_constraint_enabled': 'location_constraint_enabled',
        'max_buckets': 'max_buckets',
        'name': 'name',
        'op_mask': 'op_mask',
        'policy_id': 'policy_id',
        'policy_polling_enabled': 'policy_polling_enabled',
        'properties': 'properties',
        'user_quota_max_objects': 'user_quota_max_objects',
        'user_quota_max_size': 'user_quota_max_size'
    }

    def __init__(self, bucket_quota_max_objects=None, bucket_quota_max_size=None, display_name=None, email=None, external_bucket_quota_max_objects=None, external_bucket_quota_max_size=None, external_user_quota_max_objects=None, external_user_quota_max_size=None, keys=None, local_bucket_quota_max_objects=None, local_bucket_quota_max_size=None, local_user_quota_max_objects=None, local_user_quota_max_size=None, location_constraint_enabled=None, max_buckets=None, name=None, op_mask=None, policy_id=None, policy_polling_enabled=None, properties=None, user_quota_max_objects=None, user_quota_max_size=None):  # noqa: E501
        """ObjectStorageUserCreateReqInfo - a model defined in Swagger"""  # noqa: E501

        self._bucket_quota_max_objects = None
        self._bucket_quota_max_size = None
        self._display_name = None
        self._email = None
        self._external_bucket_quota_max_objects = None
        self._external_bucket_quota_max_size = None
        self._external_user_quota_max_objects = None
        self._external_user_quota_max_size = None
        self._keys = None
        self._local_bucket_quota_max_objects = None
        self._local_bucket_quota_max_size = None
        self._local_user_quota_max_objects = None
        self._local_user_quota_max_size = None
        self._location_constraint_enabled = None
        self._max_buckets = None
        self._name = None
        self._op_mask = None
        self._policy_id = None
        self._policy_polling_enabled = None
        self._properties = None
        self._user_quota_max_objects = None
        self._user_quota_max_size = None
        self.discriminator = None

        if bucket_quota_max_objects is not None:
            self.bucket_quota_max_objects = bucket_quota_max_objects
        if bucket_quota_max_size is not None:
            self.bucket_quota_max_size = bucket_quota_max_size
        if display_name is not None:
            self.display_name = display_name
        if email is not None:
            self.email = email
        if external_bucket_quota_max_objects is not None:
            self.external_bucket_quota_max_objects = external_bucket_quota_max_objects
        if external_bucket_quota_max_size is not None:
            self.external_bucket_quota_max_size = external_bucket_quota_max_size
        if external_user_quota_max_objects is not None:
            self.external_user_quota_max_objects = external_user_quota_max_objects
        if external_user_quota_max_size is not None:
            self.external_user_quota_max_size = external_user_quota_max_size
        if keys is not None:
            self.keys = keys
        if local_bucket_quota_max_objects is not None:
            self.local_bucket_quota_max_objects = local_bucket_quota_max_objects
        if local_bucket_quota_max_size is not None:
            self.local_bucket_quota_max_size = local_bucket_quota_max_size
        if local_user_quota_max_objects is not None:
            self.local_user_quota_max_objects = local_user_quota_max_objects
        if local_user_quota_max_size is not None:
            self.local_user_quota_max_size = local_user_quota_max_size
        if location_constraint_enabled is not None:
            self.location_constraint_enabled = location_constraint_enabled
        if max_buckets is not None:
            self.max_buckets = max_buckets
        self.name = name
        if op_mask is not None:
            self.op_mask = op_mask
        if policy_id is not None:
            self.policy_id = policy_id
        if policy_polling_enabled is not None:
            self.policy_polling_enabled = policy_polling_enabled
        if properties is not None:
            self.properties = properties
        if user_quota_max_objects is not None:
            self.user_quota_max_objects = user_quota_max_objects
        if user_quota_max_size is not None:
            self.user_quota_max_size = user_quota_max_size

    @property
    def bucket_quota_max_objects(self):
        """Gets the bucket_quota_max_objects of this ObjectStorageUserCreateReqInfo.  # noqa: E501


        :return: The bucket_quota_max_objects of this ObjectStorageUserCreateReqInfo.  # noqa: E501
        :rtype: int
        """
        return self._bucket_quota_max_objects

    @bucket_quota_max_objects.setter
    def bucket_quota_max_objects(self, bucket_quota_max_objects):
        """Sets the bucket_quota_max_objects of this ObjectStorageUserCreateReqInfo.


        :param bucket_quota_max_objects: The bucket_quota_max_objects of this ObjectStorageUserCreateReqInfo.  # noqa: E501
        :type: int
        """

        self._bucket_quota_max_objects = bucket_quota_max_objects

    @property
    def bucket_quota_max_size(self):
        """Gets the bucket_quota_max_size of this ObjectStorageUserCreateReqInfo.  # noqa: E501


        :return: The bucket_quota_max_size of this ObjectStorageUserCreateReqInfo.  # noqa: E501
        :rtype: int
        """
        return self._bucket_quota_max_size

    @bucket_quota_max_size.setter
    def bucket_quota_max_size(self, bucket_quota_max_size):
        """Sets the bucket_quota_max_size of this ObjectStorageUserCreateReqInfo.


        :param bucket_quota_max_size: The bucket_quota_max_size of this ObjectStorageUserCreateReqInfo.  # noqa: E501
        :type: int
        """

        self._bucket_quota_max_size = bucket_quota_max_size

    @property
    def display_name(self):
        """Gets the display_name of this ObjectStorageUserCreateReqInfo.  # noqa: E501


        :return: The display_name of this ObjectStorageUserCreateReqInfo.  # noqa: E501
        :rtype: str
        """
        return self._display_name

    @display_name.setter
    def display_name(self, display_name):
        """Sets the display_name of this ObjectStorageUserCreateReqInfo.


        :param display_name: The display_name of this ObjectStorageUserCreateReqInfo.  # noqa: E501
        :type: str
        """

        self._display_name = display_name

    @property
    def email(self):
        """Gets the email of this ObjectStorageUserCreateReqInfo.  # noqa: E501


        :return: The email of this ObjectStorageUserCreateReqInfo.  # noqa: E501
        :rtype: str
        """
        return self._email

    @email.setter
    def email(self, email):
        """Sets the email of this ObjectStorageUserCreateReqInfo.


        :param email: The email of this ObjectStorageUserCreateReqInfo.  # noqa: E501
        :type: str
        """

        self._email = email

    @property
    def external_bucket_quota_max_objects(self):
        """Gets the external_bucket_quota_max_objects of this ObjectStorageUserCreateReqInfo.  # noqa: E501


        :return: The external_bucket_quota_max_objects of this ObjectStorageUserCreateReqInfo.  # noqa: E501
        :rtype: int
        """
        return self._external_bucket_quota_max_objects

    @external_bucket_quota_max_objects.setter
    def external_bucket_quota_max_objects(self, external_bucket_quota_max_objects):
        """Sets the external_bucket_quota_max_objects of this ObjectStorageUserCreateReqInfo.


        :param external_bucket_quota_max_objects: The external_bucket_quota_max_objects of this ObjectStorageUserCreateReqInfo.  # noqa: E501
        :type: int
        """

        self._external_bucket_quota_max_objects = external_bucket_quota_max_objects

    @property
    def external_bucket_quota_max_size(self):
        """Gets the external_bucket_quota_max_size of this ObjectStorageUserCreateReqInfo.  # noqa: E501


        :return: The external_bucket_quota_max_size of this ObjectStorageUserCreateReqInfo.  # noqa: E501
        :rtype: int
        """
        return self._external_bucket_quota_max_size

    @external_bucket_quota_max_size.setter
    def external_bucket_quota_max_size(self, external_bucket_quota_max_size):
        """Sets the external_bucket_quota_max_size of this ObjectStorageUserCreateReqInfo.


        :param external_bucket_quota_max_size: The external_bucket_quota_max_size of this ObjectStorageUserCreateReqInfo.  # noqa: E501
        :type: int
        """

        self._external_bucket_quota_max_size = external_bucket_quota_max_size

    @property
    def external_user_quota_max_objects(self):
        """Gets the external_user_quota_max_objects of this ObjectStorageUserCreateReqInfo.  # noqa: E501


        :return: The external_user_quota_max_objects of this ObjectStorageUserCreateReqInfo.  # noqa: E501
        :rtype: int
        """
        return self._external_user_quota_max_objects

    @external_user_quota_max_objects.setter
    def external_user_quota_max_objects(self, external_user_quota_max_objects):
        """Sets the external_user_quota_max_objects of this ObjectStorageUserCreateReqInfo.


        :param external_user_quota_max_objects: The external_user_quota_max_objects of this ObjectStorageUserCreateReqInfo.  # noqa: E501
        :type: int
        """

        self._external_user_quota_max_objects = external_user_quota_max_objects

    @property
    def external_user_quota_max_size(self):
        """Gets the external_user_quota_max_size of this ObjectStorageUserCreateReqInfo.  # noqa: E501


        :return: The external_user_quota_max_size of this ObjectStorageUserCreateReqInfo.  # noqa: E501
        :rtype: int
        """
        return self._external_user_quota_max_size

    @external_user_quota_max_size.setter
    def external_user_quota_max_size(self, external_user_quota_max_size):
        """Sets the external_user_quota_max_size of this ObjectStorageUserCreateReqInfo.


        :param external_user_quota_max_size: The external_user_quota_max_size of this ObjectStorageUserCreateReqInfo.  # noqa: E501
        :type: int
        """

        self._external_user_quota_max_size = external_user_quota_max_size

    @property
    def keys(self):
        """Gets the keys of this ObjectStorageUserCreateReqInfo.  # noqa: E501


        :return: The keys of this ObjectStorageUserCreateReqInfo.  # noqa: E501
        :rtype: list[ObjectStorageKey]
        """
        return self._keys

    @keys.setter
    def keys(self, keys):
        """Sets the keys of this ObjectStorageUserCreateReqInfo.


        :param keys: The keys of this ObjectStorageUserCreateReqInfo.  # noqa: E501
        :type: list[ObjectStorageKey]
        """

        self._keys = keys

    @property
    def local_bucket_quota_max_objects(self):
        """Gets the local_bucket_quota_max_objects of this ObjectStorageUserCreateReqInfo.  # noqa: E501


        :return: The local_bucket_quota_max_objects of this ObjectStorageUserCreateReqInfo.  # noqa: E501
        :rtype: int
        """
        return self._local_bucket_quota_max_objects

    @local_bucket_quota_max_objects.setter
    def local_bucket_quota_max_objects(self, local_bucket_quota_max_objects):
        """Sets the local_bucket_quota_max_objects of this ObjectStorageUserCreateReqInfo.


        :param local_bucket_quota_max_objects: The local_bucket_quota_max_objects of this ObjectStorageUserCreateReqInfo.  # noqa: E501
        :type: int
        """

        self._local_bucket_quota_max_objects = local_bucket_quota_max_objects

    @property
    def local_bucket_quota_max_size(self):
        """Gets the local_bucket_quota_max_size of this ObjectStorageUserCreateReqInfo.  # noqa: E501


        :return: The local_bucket_quota_max_size of this ObjectStorageUserCreateReqInfo.  # noqa: E501
        :rtype: int
        """
        return self._local_bucket_quota_max_size

    @local_bucket_quota_max_size.setter
    def local_bucket_quota_max_size(self, local_bucket_quota_max_size):
        """Sets the local_bucket_quota_max_size of this ObjectStorageUserCreateReqInfo.


        :param local_bucket_quota_max_size: The local_bucket_quota_max_size of this ObjectStorageUserCreateReqInfo.  # noqa: E501
        :type: int
        """

        self._local_bucket_quota_max_size = local_bucket_quota_max_size

    @property
    def local_user_quota_max_objects(self):
        """Gets the local_user_quota_max_objects of this ObjectStorageUserCreateReqInfo.  # noqa: E501


        :return: The local_user_quota_max_objects of this ObjectStorageUserCreateReqInfo.  # noqa: E501
        :rtype: int
        """
        return self._local_user_quota_max_objects

    @local_user_quota_max_objects.setter
    def local_user_quota_max_objects(self, local_user_quota_max_objects):
        """Sets the local_user_quota_max_objects of this ObjectStorageUserCreateReqInfo.


        :param local_user_quota_max_objects: The local_user_quota_max_objects of this ObjectStorageUserCreateReqInfo.  # noqa: E501
        :type: int
        """

        self._local_user_quota_max_objects = local_user_quota_max_objects

    @property
    def local_user_quota_max_size(self):
        """Gets the local_user_quota_max_size of this ObjectStorageUserCreateReqInfo.  # noqa: E501


        :return: The local_user_quota_max_size of this ObjectStorageUserCreateReqInfo.  # noqa: E501
        :rtype: int
        """
        return self._local_user_quota_max_size

    @local_user_quota_max_size.setter
    def local_user_quota_max_size(self, local_user_quota_max_size):
        """Sets the local_user_quota_max_size of this ObjectStorageUserCreateReqInfo.


        :param local_user_quota_max_size: The local_user_quota_max_size of this ObjectStorageUserCreateReqInfo.  # noqa: E501
        :type: int
        """

        self._local_user_quota_max_size = local_user_quota_max_size

    @property
    def location_constraint_enabled(self):
        """Gets the location_constraint_enabled of this ObjectStorageUserCreateReqInfo.  # noqa: E501


        :return: The location_constraint_enabled of this ObjectStorageUserCreateReqInfo.  # noqa: E501
        :rtype: bool
        """
        return self._location_constraint_enabled

    @location_constraint_enabled.setter
    def location_constraint_enabled(self, location_constraint_enabled):
        """Sets the location_constraint_enabled of this ObjectStorageUserCreateReqInfo.


        :param location_constraint_enabled: The location_constraint_enabled of this ObjectStorageUserCreateReqInfo.  # noqa: E501
        :type: bool
        """

        self._location_constraint_enabled = location_constraint_enabled

    @property
    def max_buckets(self):
        """Gets the max_buckets of this ObjectStorageUserCreateReqInfo.  # noqa: E501


        :return: The max_buckets of this ObjectStorageUserCreateReqInfo.  # noqa: E501
        :rtype: int
        """
        return self._max_buckets

    @max_buckets.setter
    def max_buckets(self, max_buckets):
        """Sets the max_buckets of this ObjectStorageUserCreateReqInfo.


        :param max_buckets: The max_buckets of this ObjectStorageUserCreateReqInfo.  # noqa: E501
        :type: int
        """

        self._max_buckets = max_buckets

    @property
    def name(self):
        """Gets the name of this ObjectStorageUserCreateReqInfo.  # noqa: E501


        :return: The name of this ObjectStorageUserCreateReqInfo.  # noqa: E501
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this ObjectStorageUserCreateReqInfo.


        :param name: The name of this ObjectStorageUserCreateReqInfo.  # noqa: E501
        :type: str
        """
        if name is None:
            raise ValueError("Invalid value for `name`, must not be `None`")  # noqa: E501

        self._name = name

    @property
    def op_mask(self):
        """Gets the op_mask of this ObjectStorageUserCreateReqInfo.  # noqa: E501


        :return: The op_mask of this ObjectStorageUserCreateReqInfo.  # noqa: E501
        :rtype: str
        """
        return self._op_mask

    @op_mask.setter
    def op_mask(self, op_mask):
        """Sets the op_mask of this ObjectStorageUserCreateReqInfo.


        :param op_mask: The op_mask of this ObjectStorageUserCreateReqInfo.  # noqa: E501
        :type: str
        """

        self._op_mask = op_mask

    @property
    def policy_id(self):
        """Gets the policy_id of this ObjectStorageUserCreateReqInfo.  # noqa: E501


        :return: The policy_id of this ObjectStorageUserCreateReqInfo.  # noqa: E501
        :rtype: int
        """
        return self._policy_id

    @policy_id.setter
    def policy_id(self, policy_id):
        """Sets the policy_id of this ObjectStorageUserCreateReqInfo.


        :param policy_id: The policy_id of this ObjectStorageUserCreateReqInfo.  # noqa: E501
        :type: int
        """

        self._policy_id = policy_id

    @property
    def policy_polling_enabled(self):
        """Gets the policy_polling_enabled of this ObjectStorageUserCreateReqInfo.  # noqa: E501


        :return: The policy_polling_enabled of this ObjectStorageUserCreateReqInfo.  # noqa: E501
        :rtype: bool
        """
        return self._policy_polling_enabled

    @policy_polling_enabled.setter
    def policy_polling_enabled(self, policy_polling_enabled):
        """Sets the policy_polling_enabled of this ObjectStorageUserCreateReqInfo.


        :param policy_polling_enabled: The policy_polling_enabled of this ObjectStorageUserCreateReqInfo.  # noqa: E501
        :type: bool
        """

        self._policy_polling_enabled = policy_polling_enabled

    @property
    def properties(self):
        """Gets the properties of this ObjectStorageUserCreateReqInfo.  # noqa: E501


        :return: The properties of this ObjectStorageUserCreateReqInfo.  # noqa: E501
        :rtype: OSUserPropertiesReq
        """
        return self._properties

    @properties.setter
    def properties(self, properties):
        """Sets the properties of this ObjectStorageUserCreateReqInfo.


        :param properties: The properties of this ObjectStorageUserCreateReqInfo.  # noqa: E501
        :type: OSUserPropertiesReq
        """

        self._properties = properties

    @property
    def user_quota_max_objects(self):
        """Gets the user_quota_max_objects of this ObjectStorageUserCreateReqInfo.  # noqa: E501


        :return: The user_quota_max_objects of this ObjectStorageUserCreateReqInfo.  # noqa: E501
        :rtype: int
        """
        return self._user_quota_max_objects

    @user_quota_max_objects.setter
    def user_quota_max_objects(self, user_quota_max_objects):
        """Sets the user_quota_max_objects of this ObjectStorageUserCreateReqInfo.


        :param user_quota_max_objects: The user_quota_max_objects of this ObjectStorageUserCreateReqInfo.  # noqa: E501
        :type: int
        """

        self._user_quota_max_objects = user_quota_max_objects

    @property
    def user_quota_max_size(self):
        """Gets the user_quota_max_size of this ObjectStorageUserCreateReqInfo.  # noqa: E501


        :return: The user_quota_max_size of this ObjectStorageUserCreateReqInfo.  # noqa: E501
        :rtype: int
        """
        return self._user_quota_max_size

    @user_quota_max_size.setter
    def user_quota_max_size(self, user_quota_max_size):
        """Sets the user_quota_max_size of this ObjectStorageUserCreateReqInfo.


        :param user_quota_max_size: The user_quota_max_size of this ObjectStorageUserCreateReqInfo.  # noqa: E501
        :type: int
        """

        self._user_quota_max_size = user_quota_max_size

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, ObjectStorageUserCreateReqInfo):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
